// inputs: 0
// output: a cross made of asterisks:
// *   *
//  * * 
//   *  
//  * * 
// *   *

proc main() {
  local boolean[][] grid;
  grid = new boolean[][5];
  local int i;
  i = 0;
  while (i < (grid.length)) do
  {
    grid[i] = new boolean[grid.length];
    i = i + 1;
  }
  (grid[0])[0] = true;
  (grid[1])[1] = true;
  (grid[2])[2] = true;
  (grid[3])[3] = true;
  (grid[4])[4] = true;
  setAntiDiagonal(grid);
  show(grid);
}

proc setAntiDiagonal(boolean[][] grid) {
  local int i;
  i = 0;
  while (i < (grid.length)) do
  {
    (grid[i])[((grid[i]).length) - (i + 1)] = true;
    i = i + 1;
  }
}

proc show(boolean[][] grid) {
  local int i;
  local int j;
  i = 0;
  while (i < (grid.length)) do
  {
    j = 0;
    while (j < ((grid[i]).length)) do
    {
      if ((grid[i])[j]) then
      {
        outchar 42;
      }
      else
      {
        outchar 32;
      }
      j = j + 1;
    }
    outchar 13;
    outchar 10;
    i = i + 1;
  }
}
